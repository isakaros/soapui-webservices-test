<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="db023d65-5148-4313-a547-de323315c0e4" activeEnvironment="Default" name="SEETest-SrvTest" resourceRoot="" soapui-version="5.5.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" id="28c39def-8aa6-43e6-9356-cc2439c7d56e" wsaVersion="NONE" name="ContactsPortSoap11" type="wsdl" bindingName="{http://www.vpetrou.com/article-ws}ContactsPortSoap11" soapVersion="1_1" anonymous="optional" definition="http://localhost:8080/soapws/contacts.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://localhost:8080/soapws/contacts.wsdl"><con:part><con:url>http://localhost:8080/soapws/contacts.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://www.vpetrou.com/article-ws" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:sch="http://www.vpetrou.com/contact-ws" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://www.vpetrou.com/article-ws">
  <wsdl:types>
    <xs:schema elementFormDefault="qualified" targetNamespace="http://www.vpetrou.com/contact-ws" xmlns:tns="http://www.vpetrou.com/contact-ws" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="getContactByIdRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="contactId" type="xs:long"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getContactByIdResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="contactInfo" type="tns:contactInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="contactInfo">
        <xs:sequence>
          <xs:element name="contactId" type="xs:long"/>
          <xs:element name="name" type="xs:string"/>
          <xs:element name="nickName" type="xs:string"/>
          <xs:element name="category" type="xs:string"/>
          <xs:element name="phone" type="xs:string"/>
          <xs:element name="email" type="xs:string"/>
          <xs:element name="city" type="xs:string"/>
          <xs:element name="country" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="getContactByNameRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="name" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getContactByNameResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" name="contactInfo" type="tns:contactInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllContactsRequest">
        <xs:complexType/>
      </xs:element>
      <xs:element name="getAllContactsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" name="contactInfo" type="tns:contactInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="serviceStatus">
        <xs:sequence>
          <xs:element name="statusCode" type="xs:string"/>
          <xs:element name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="addContactRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="name" type="xs:string"/>
            <xs:element name="nickName" type="xs:string"/>
            <xs:element name="category" type="xs:string"/>
            <xs:element name="phone" type="xs:string"/>
            <xs:element name="email" type="xs:string"/>
            <xs:element name="city" type="xs:string"/>
            <xs:element name="country" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addContactResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="serviceStatus" type="tns:serviceStatus"/>
            <xs:element name="contactInfo" type="tns:contactInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateContactRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="contactInfo" type="tns:contactInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateContactResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="serviceStatus" type="tns:serviceStatus"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteContactRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="contactId" type="xs:long"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteContactResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="serviceStatus" type="tns:serviceStatus"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="addContactResponse">
    <wsdl:part element="sch:addContactResponse" name="addContactResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getContactByNameResponse">
    <wsdl:part element="sch:getContactByNameResponse" name="getContactByNameResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteContactResponse">
    <wsdl:part element="sch:deleteContactResponse" name="deleteContactResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getContactByIdRequest">
    <wsdl:part element="sch:getContactByIdRequest" name="getContactByIdRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getContactByIdResponse">
    <wsdl:part element="sch:getContactByIdResponse" name="getContactByIdResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllContactsResponse">
    <wsdl:part element="sch:getAllContactsResponse" name="getAllContactsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateContactRequest">
    <wsdl:part element="sch:updateContactRequest" name="updateContactRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getContactByNameRequest">
    <wsdl:part element="sch:getContactByNameRequest" name="getContactByNameRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllContactsRequest">
    <wsdl:part element="sch:getAllContactsRequest" name="getAllContactsRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="addContactRequest">
    <wsdl:part element="sch:addContactRequest" name="addContactRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteContactRequest">
    <wsdl:part element="sch:deleteContactRequest" name="deleteContactRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateContactResponse">
    <wsdl:part element="sch:updateContactResponse" name="updateContactResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="ContactsPort">
    <wsdl:operation name="addContact">
      <wsdl:input message="tns:addContactRequest" name="addContactRequest"></wsdl:input>
      <wsdl:output message="tns:addContactResponse" name="addContactResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getContactByName">
      <wsdl:input message="tns:getContactByNameRequest" name="getContactByNameRequest"></wsdl:input>
      <wsdl:output message="tns:getContactByNameResponse" name="getContactByNameResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteContact">
      <wsdl:input message="tns:deleteContactRequest" name="deleteContactRequest"></wsdl:input>
      <wsdl:output message="tns:deleteContactResponse" name="deleteContactResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getContactById">
      <wsdl:input message="tns:getContactByIdRequest" name="getContactByIdRequest"></wsdl:input>
      <wsdl:output message="tns:getContactByIdResponse" name="getContactByIdResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllContacts">
      <wsdl:input message="tns:getAllContactsRequest" name="getAllContactsRequest"></wsdl:input>
      <wsdl:output message="tns:getAllContactsResponse" name="getAllContactsResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateContact">
      <wsdl:input message="tns:updateContactRequest" name="updateContactRequest"></wsdl:input>
      <wsdl:output message="tns:updateContactResponse" name="updateContactResponse"></wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ContactsPortSoap11" type="tns:ContactsPort">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="addContact">
      <soap:operation soapAction=""/>
      <wsdl:input name="addContactRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="addContactResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getContactByName">
      <soap:operation soapAction=""/>
      <wsdl:input name="getContactByNameRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getContactByNameResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteContact">
      <soap:operation soapAction=""/>
      <wsdl:input name="deleteContactRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteContactResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getContactById">
      <soap:operation soapAction=""/>
      <wsdl:input name="getContactByIdRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getContactByIdResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllContacts">
      <soap:operation soapAction=""/>
      <wsdl:input name="getAllContactsRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllContactsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateContact">
      <soap:operation soapAction=""/>
      <wsdl:input name="updateContactRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateContactResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ContactsPortService">
    <wsdl:port binding="tns:ContactsPortSoap11" name="ContactsPortSoap11">
      <soap:address location="http://localhost:8080/soapws"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:8080/soapws</con:endpoint></con:endpoints><con:operation id="123fdbfe-0072-450b-a3e1-3f5a53326680" isOneWay="false" action="" name="addContact" bindingOperationName="addContact" type="Request-Response" outputName="addContactResponse" inputName="addContactRequest" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1d3bfa87-d0c1-415b-92e7-a0f96822c8ed" isOneWay="false" action="" name="deleteContact" bindingOperationName="deleteContact" type="Request-Response" outputName="deleteContactResponse" inputName="deleteContactRequest" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a6ddcdcf-8b56-4079-a877-6ab6df831d59" isOneWay="false" action="" name="getAllContacts" bindingOperationName="getAllContacts" type="Request-Response" outputName="getAllContactsResponse" inputName="getAllContactsRequest" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ed354ee0-22b4-40ba-931e-fea4ae7d2476" isOneWay="false" action="" name="getContactById" bindingOperationName="getContactById" type="Request-Response" outputName="getContactByIdResponse" inputName="getContactByIdRequest" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f6de8831-c8cc-4b47-ad0f-8dc3a80c6d22" isOneWay="false" action="" name="getContactByName" bindingOperationName="getContactByName" type="Request-Response" outputName="getContactByNameResponse" inputName="getContactByNameRequest" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6b5ac5ce-e11e-491d-bf5a-c914d2558a75" isOneWay="false" action="" name="updateContact" bindingOperationName="updateContact" type="Request-Response" outputName="updateContactResponse" inputName="updateContactRequest" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:testSuite id="9b6953b4-8623-44ac-aeb9-5a7b14297256" name="TS-SRVAddContacts"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="49ad0c79-c410-446e-89b7-5c9964270bc3" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC-SRVAddContacts-P-001" searchProperties="true"><con:settings/><con:testStep type="groovy" name="GenerateNickName" id="b7c9f27c-10eb-4bd9-b056-48829ce95f2e"><con:settings/><con:config><script>def letters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
def numbers = "1234567890";

return generateRandomChars(letters, 4) + generateRandomChars(numbers, 4);

def generateRandomChars(String candidateChars, int length){
StringBuilder sb = new StringBuilder();
Random random = new Random();

for (int i=0; i&lt;length; i++){
sb.append(candidateChars.charAt(random.nextInt(candidateChars.length())));
}
return sb.toString();
}</script></con:config></con:testStep><con:testStep type="request" name="AddContactWithAllFieldsValid" id="1d84d1d9-d1a1-459e-a7db-154e75749200"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ContactsPortSoap11</con:interface><con:operation>addContact</con:operation><con:request name="AddContactWithAllFieldsValid" id="2755e002-997f-4879-9b68-2dc70db01561"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/soapws</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:con="http://www.vpetrou.com/contact-ws">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <con:addContactRequest>\r
         <con:name>Ilias S.</con:name>\r
         <con:nickName>${GenerateNickName#result}</con:nickName>\r
         <con:category>Relevant</con:category>\r
         <con:phone>00301234567890</con:phone>\r
         <con:email>isakaros@gmail.com</con:email>\r
         <con:city>Athens</con:city>\r
         <con:country>Greece</con:country>\r
      </con:addContactRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="e586d07d-4d11-43d8-98b0-9305ab1a857c"/><con:assertion type="Simple Contains" id="e70d326e-45e4-48e3-ac53-6a267c6b293e" name="Contains"><con:configuration><token>SUCCESS</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="GetNewContactId" id="b60e921a-b960-44e2-b6a3-7b84e0b6b7ed"><con:settings/><con:config><script>import groovy.util.*;

def currentTCName = testRunner.testCase.getName();
def currentTSName = testRunner.testCase.testSuite.getName();
def project = testRunner.testCase.testSuite.project;
def tcase = project.testSuites[currentTSName].testCases[currentTCName];
 
// Get the result of the target step AddContactWithAllFieldsValid
def targetStepName = "AddContactWithAllFieldsValid";
def tstep = tcase.getTestStepByName(targetStepName);
def response= tstep.getPropertyValue("response");

//Get the value of the target node 'contactId'
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("$response");
def contactId = "//*:contactId";
return holder.getNodeValue(contactId);</script></con:config></con:testStep><con:testStep type="request" name="RemoveContact" id="8ce173e5-2b7b-4689-986d-307934527598"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ContactsPortSoap11</con:interface><con:operation>deleteContact</con:operation><con:request name="RemoveContact" id="85763d0e-3b03-4d8c-a639-199f81d3af76"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/soapws</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:con="http://www.vpetrou.com/contact-ws">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <con:deleteContactRequest>\r
         <con:contactId>${GetNewContactId#result}</con:contactId>\r
      </con:deleteContactRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="ed5a79ec-4b12-4bd9-9380-9867e1522623"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="46900744-5aed-4fe2-bb6b-a10ebf36d38a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC-SRVAddContacts-N-001" searchProperties="true"><con:settings/><con:testStep type="groovy" name="GenerateNickName" id="1aadd589-7375-4bc9-9287-f67e97ba630c"><con:settings/><con:config><script>def letters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
def numbers = "1234567890";

return generateRandomChars(letters, 4) + generateRandomChars(numbers, 4);

def generateRandomChars(String candidateChars, int length){
StringBuilder sb = new StringBuilder();
Random random = new Random();

for (int i=0; i&lt;length; i++){
sb.append(candidateChars.charAt(random.nextInt(candidateChars.length())));
}
return sb.toString();
}</script></con:config></con:testStep><con:testStep type="request" name="AddContactWithInvalidEmail" id="bf46d3a2-c908-4869-a73d-f0218b7af201"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ContactsPortSoap11</con:interface><con:operation>addContact</con:operation><con:request name="AddContactWithInvalidEmail" id="2755e002-997f-4879-9b68-2dc70db01561"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/soapws</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:con="http://www.vpetrou.com/contact-ws">
   <soapenv:Header/>
   <soapenv:Body>
      <con:addContactRequest>
         <con:name>Ilias S.</con:name>
         <con:nickName>${GenerateNickName#result}</con:nickName>
         <con:category>Relevant</con:category>
         <con:phone>00301234567890</con:phone>
         <con:email>INVALED_EMAIL</con:email>
         <con:city>Athens</con:city>
         <con:country>Greece</con:country>
      </con:addContactRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="e586d07d-4d11-43d8-98b0-9305ab1a857c"/><con:assertion type="Simple Contains" id="e70d326e-45e4-48e3-ac53-6a267c6b293e" name="Contains"><con:configuration><token>(?s).*Validation failed*.*propertyPath=email*.*</token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="203dcd5c-cdf7-4832-92a1-cd457fc6f4e6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC-SRVAddContacts-N-002" searchProperties="true"><con:settings/><con:testStep type="groovy" name="GenerateNickName" id="022990ad-78c1-423b-93bd-f8a753715c80"><con:settings/><con:config><script>def letters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
def numbers = "1234567890";

return generateRandomChars(letters, 4) + generateRandomChars(numbers, 4);

def generateRandomChars(String candidateChars, int length){
StringBuilder sb = new StringBuilder();
Random random = new Random();

for (int i=0; i&lt;length; i++){
sb.append(candidateChars.charAt(random.nextInt(candidateChars.length())));
}
return sb.toString();
}</script></con:config></con:testStep><con:testStep type="request" name="AddContactWithInvalidPhone" id="ec7c64ad-cae1-4fb0-92ff-5261d443759f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ContactsPortSoap11</con:interface><con:operation>addContact</con:operation><con:request name="AddContactWithInvalidPhone" id="2755e002-997f-4879-9b68-2dc70db01561"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/soapws</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:con="http://www.vpetrou.com/contact-ws">
   <soapenv:Header/>
   <soapenv:Body>
      <con:addContactRequest>
         <con:name>Ilias S.</con:name>
         <con:nickName>${GenerateNickName#result}</con:nickName>
         <con:category>Relevant</con:category>
         <con:phone>0030123456789</con:phone>
         <con:email>isakaros@gmail.com</con:email>
         <con:city>Athens</con:city>
         <con:country>Greece</con:country>
      </con:addContactRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="e586d07d-4d11-43d8-98b0-9305ab1a857c"/><con:assertion type="Simple Contains" id="e70d326e-45e4-48e3-ac53-6a267c6b293e" name="Contains"><con:configuration><token>(?s).*Validation failed*.*propertyPath=phone*.*</token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="4710fd91-2363-424e-92c0-c7ecc053e74a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC-SRVAddContacts-N-003" searchProperties="true"><con:settings/><con:testStep type="groovy" name="GenerateNickName" id="141bc87a-8911-4ebc-af24-68a09f27bd5b"><con:settings/><con:config><script>def letters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
def numbers = "1234567890";

return generateRandomChars(letters, 4) + generateRandomChars(numbers, 4);

def generateRandomChars(String candidateChars, int length){
StringBuilder sb = new StringBuilder();
Random random = new Random();

for (int i=0; i&lt;length; i++){
sb.append(candidateChars.charAt(random.nextInt(candidateChars.length())));
}
return sb.toString();
}</script></con:config></con:testStep><con:testStep type="request" name="AddContactWithInvalidNickName" id="3c447ae0-692f-4402-b205-25417d4a1f88"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ContactsPortSoap11</con:interface><con:operation>addContact</con:operation><con:request name="AddContactWithInvalidNickName" id="2755e002-997f-4879-9b68-2dc70db01561"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/soapws</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:con="http://www.vpetrou.com/contact-ws">
   <soapenv:Header/>
   <soapenv:Body>
      <con:addContactRequest>
         <con:name>Ilias S.</con:name>
         <con:nickName>qwe1234</con:nickName>
         <con:category>Relevant</con:category>
         <con:phone>00301234567890</con:phone>
         <con:email>iskaros@gmail.com</con:email>
         <con:city>Athens</con:city>
         <con:country>Greece</con:country>
      </con:addContactRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="e586d07d-4d11-43d8-98b0-9305ab1a857c"/><con:assertion type="Simple Contains" id="e70d326e-45e4-48e3-ac53-6a267c6b293e" name="Contains"><con:configuration><token>(?s).*Validation failed*.*propertyPath=nickName*.*</token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/></con:soapui-project>